---

variables:
  SEMANTIC_RELEASE_IMAGE: "gtramontina/semantic-release"
  SEMANTIC_RELEASE_TAG: "17.4.3"
  GIT_AUTHOR_NAME: $GITLAB_USER_LOGIN
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_LOGIN
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  GIT_CREDENTIALS: gitlab-ci-token:${GITLAB_CI_TOKEN}
  GITLAB_TOKEN: $GITLAB_CI_TOKEN
  ENABLE_SEMANTIC_V_SYNTAX: "true"
  SEMANTIC_RELEASE_BRANCH: main

.semantic-base:
  script:
    - |
      echo "GIT_AUTHOR_NAME: $GIT_AUTHOR_NAME"
      echo "GIT_AUTHOR_EMAIL: $GIT_AUTHOR_EMAIL"
      echo "GIT_COMMITTER_NAME: $GIT_COMMITTER_NAME"
      echo "GIT_COMMITTER_EMAIL: $GIT_COMMITTER_EMAIL"

    - |
      apk update && \
      echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
      echo "https://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
      apk --no-cache add curl yq jq && \
    - yarn install

    - yq -o=json eval .releaserc* > release.json
    - jq --arg BRANCHNAME "$CI_COMMIT_REF_NAME" '.branches |= . + [$BRANCHNAME]' release.json > temp.json
    - cp -rf temp.json release.json
    - |
      var=$(find . -maxdepth 1 -type f -name ".releaserc*")
      jq --slurpfile temp temp.json '.plugins |= . + $temp' release.json | yq eval -P - > $var


semantic-release:dry-run:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push
  image:
    name: $SEMANTIC_RELEASE_IMAGE:$SEMANTIC_RELEASE_TAG
    entrypoint: [""]
  variables:
    ADDITIONAL_NPM_PKGS: ""
  script:
    - !reference ['.semantic-base', 'script']
    - semantic-release --ci false --dryRun
    - cat release.env || echo "No release was created, check your commit message."
  rules:
    - if: '$ENABLE_SEMANTIC_RELEASE_DRY_RUN == "true"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  allow_failure: true
  artifacts:
    reports:
      dotenv: release.env
    paths:
      - ./hoppr-cyclonedx-models/__init__.py  
      - pyproject.toml
      - docs
      - release.env
      - release.json
      - .releaserc*
      - yarn.lock

semantic-release:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push
  image:
    name: $SEMANTIC_RELEASE_IMAGE:$SEMANTIC_RELEASE_TAG
    entrypoint: [""]
  script:
    - !reference ['.semantic-base', 'script']
    - semantic-release
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $ENABLE_SEMANTIC_RELEASE == "true" && $CI_PROJECT_NAMESPACE =~ /^lmco/'
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  artifacts:
    paths:
      - ./hoppr-cyclonedx-models/__init__.py 
      - pyproject.toml
      - docs

