---
variables:
  SEMANTIC_RELEASE_IMAGE: hoppr/semantic-release
  SEMANTIC_RELEASE_TAG: "0.0.15"
  GIT_AUTHOR_NAME: $GITLAB_USER_LOGIN
  GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
  GIT_COMMITTER_NAME: $GITLAB_USER_LOGIN
  GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  GIT_CREDENTIALS: gitlab-ci-token:${GITLAB_CI_TOKEN}
  GITLAB_TOKEN: $GITLAB_CI_TOKEN
  ENABLE_SEMANTIC_V_SYNTAX: "true"
  SEMANTIC_RELEASE_BRANCH: main

.semantic-base:
  image:
    name: $SEMANTIC_RELEASE_IMAGE:$SEMANTIC_RELEASE_TAG
    entrypoint: [""]
  before_script:
    - |
      echo "GIT_AUTHOR_NAME:     $GIT_AUTHOR_NAME"
      echo "GIT_AUTHOR_EMAIL:    $GIT_AUTHOR_EMAIL"
      echo "GIT_COMMITTER_NAME:  $GIT_COMMITTER_NAME"
      echo "GIT_COMMITTER_EMAIL: $GIT_COMMITTER_EMAIL"
    - yq --version
  cache:
    key: $CI_COMMIT_REF_SLUG
    policy: pull-push
    paths:
      - node_modules

semantic-release:dry-run:
  extends: .semantic-base
  variables:
    ADDITIONAL_NPM_PKGS: ""
  script:
    - semantic-release --ci false --dryRun
    - cat release.env || echo "No release was created, check your commit message."
  rules:
    - if: '$ENABLE_SEMANTIC_RELEASE_DRY_RUN == "true"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  allow_failure: true
  artifacts:
    reports:
      dotenv: release.env
    paths:
      - ./hoppr_cyclonedx_models/__init__.py 
      - pyproject.toml
      - docs
      - release.env
      - release.json
      - .releaserc*
      - yarn.lock

semantic-release:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push
  image:
    name: $SEMANTIC_RELEASE_IMAGE:$SEMANTIC_RELEASE_TAG
    entrypoint: [""]
  script:
    - semantic-release
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /^main$/
      when: on_success
  artifacts:
    paths:
      - ./hoppr_cyclonedx_models/__init__.py 
      - pyproject.toml
      - docs